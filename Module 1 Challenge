from audioop import add
import csv
from pathlib import Path

#Part 1: Automate the Calculations.

loan_costs = [500, 600, 200, 1000, 450]

# Print the number of loans from the list.

number_of_loans = len(loan_costs)
print(f"There are a total of {number_of_loans} loans.")


# Print the total value of the loans

sum_of_loans = sum(loan_costs)
print(" The total amount of all the loans is", sum_of_loans) 


# Print the average loan amount

average_loan_amount = sum_of_loans / number_of_loans
print(" The average loan price is ", average_loan_amount) 


#Part 2: Analyze Loan Data.

# Given the following loan data, you will need to calculate the present value for the loan

loan = {
    "loan_price": 500,
    "remaining_months": 9,
    "repayment_interval": "bullet",
    "future_value": 1000,
}

# extract the Future Value and Remaining Months on the loan & Print each variable.


future_value = loan.get("future_value")  
print(" The future value of the loan is", future_value)

remaining_months = loan.get("remaining_months")
print(" The number of months remaining on the loan is", (remaining_months))


#Calculate the Present Value of the loan using 20% as the discount rate and print it.


annual_discount_rate = 0.2    
present_value = future_value/ (1 + annual_discount_rate/12) ** remaining_months
print("The present value of the loan is", present_value)


# Write a conditional statement to decide if the present value represents the loan's fair value and is worth purchasing.


if present_value >= loan.get("loan_price"):
    print("The loan is worth at least the cost to buy it.")
else:
    print("The loan is too expensive and not worth the price.")


#Part 3: Perform Financial Calculations.

# Data of new loan to oerform calculations

new_loan = {
    "loan_price": 800,
    "remaining_months": 12,
    "repayment_interval": "bullet",
    "future_value": 1000,
}

#    This function should include parameters for `future_value`, `remaining_months`, and the `annual_discount_rate`
#    The function should return the `present_value` for the loan.

future_value = new_loan.get("future_value")  
print(" The future value of the loan is", future_value)

remaining_months = new_loan.get("remaining_months")
print(" The number of months remaining on the loan is", (remaining_months))


#`annual_discount_rate` = 0.2 for this new loan calculation.
# Define a new function that will be used to calculate present value and print the result.


annual_discount_rate = 0.2    
present_value = future_value/ (1 + annual_discount_rate/12) ** remaining_months
print(f"The present value of the loan is: {present_value}")


#Part 4: Conditionally filter lists of loans.
# use a loop to iterate through a series of loans and select only the inexpensive loans.


loans = [
    {
        "loan_price": 700,
        "remaining_months": 9,
        "repayment_interval": "monthly",
        "future_value": 1000,
    },
    {
        "loan_price": 500,
        "remaining_months": 13,
        "repayment_interval": "bullet",
        "future_value": 1000,
    },
    {
        "loan_price": 200,
        "remaining_months": 16,
        "repayment_interval": "bullet",
        "future_value": 1000,
    },
    {
        "loan_price": 900,
        "remaining_months": 16,
        "repayment_interval": "bullet",
        "future_value": 1000,
    },
]

# Create an empty list called `inexpensive_loans`

inexpensive_loans = []

# Loop through all the loans and append any that cost $500 or less to the `inexpensive_loans` list

for loan in loans:
    if loan["loan_price"] <= 500:
        inexpensive_loans.append(loan)


# Print the `inexpensive_loans` list

print (inexpensive_loans)



#Part 5: Save the results of inexpensive loans to a csv file
# Set the output header


header = ["loan_price", "remaining_months", "repayment_interval", "future_value"]

# Set the output file path

output_path = Path("inexpensive_loans.csv")

# Use csv library and `csv.writer` to write the header row and each row of `loan.values()` from the `inexpensive_loans` list.

with open(output_path, "w") as csvfile:
    csvwriter = csv.writer(csvfile, delimiter=",")
    csvwriter.writerow(header)
    for item in inexpensive_loans:
        csvwriter.writerow(item.values())

        
